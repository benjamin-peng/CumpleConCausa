{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminpeng/Documents/CumpleConCausa/frontend/src/Components/LinkButton.js\",\n    _s = $RefreshSig$();\n\n/*\ntakes String props { link, text } \nreturns a button linking to the link with text set to text\n*/\nimport LinkStyled from \"../Styles/LinkButton.styled\";\nimport { animated, useSpring } from 'react-spring';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LinkButton = _ref => {\n  _s();\n\n  let {\n    link,\n    text\n  } = _ref;\n  const [hover, setHover] = useState(false);\n\n  const handleEnter = () => {\n    setHover(true);\n  };\n\n  const handleLeave = () => {\n    setHover(false);\n  };\n\n  const style = useSpring({\n    display: 'inline-block',\n    transform: hover ? 'scale(1.1)' : 'scale(1)',\n    config: {\n      friction: 10,\n      mass: 1\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(LinkStyled, {\n      className: \"link-button\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: link,\n        onMouseEnter: handleEnter,\n        onMouseLeave: handleLeave,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LinkButton, \"4SVg+h6wXcZ46FwOZfTyHmtQ9jA=\", false, function () {\n  return [useSpring];\n});\n\n_c = LinkButton;\nexport default LinkButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkButton\");","map":{"version":3,"sources":["/Users/benjaminpeng/Documents/CumpleConCausa/frontend/src/Components/LinkButton.js"],"names":["LinkStyled","animated","useSpring","useState","LinkButton","link","text","hover","setHover","handleEnter","handleLeave","style","display","transform","config","friction","mass"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,6BAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,KAAK,GAAGT,SAAS,CAAC;AACpBU,IAAAA,OAAO,EAAE,cADW;AAEpBC,IAAAA,SAAS,EAAEN,KAAK,GACZ,YADY,GAEZ,UAJgB;AAKpBO,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,IAAI,EAAE;AAFF;AALY,GAAD,CAAvB;AAWA,sBACA,QAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEL,KAArB;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA,6BACI;AAAG,QAAA,IAAI,EAAEN,IAAT;AAAe,QAAA,YAAY,EAAEI,WAA7B;AAA0C,QAAA,YAAY,EAAEC,WAAxD;AAAA,kBAAsEJ;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAOH,CA9BD;;GAAMF,U;UAYYF,S;;;KAZZE,U;AAgCN,eAAeA,UAAf","sourcesContent":["/*\ntakes String props { link, text } \nreturns a button linking to the link with text set to text\n*/\nimport LinkStyled from \"../Styles/LinkButton.styled\";\nimport { animated, useSpring } from 'react-spring';\nimport { useState } from 'react';\n\nconst LinkButton = ({ link, text }) => {\n\n    const [hover, setHover] = useState(false);\n\n    const handleEnter = () => {\n        setHover(true);\n    }\n\n    const handleLeave = () => {\n        setHover(false);\n    }\n\n    const style = useSpring({\n        display: 'inline-block',\n        transform: hover\n          ? 'scale(1.1)'\n          : 'scale(1)',\n        config: {\n            friction: 10,\n            mass: 1\n        },\n      });\n\n    return (\n    <animated.div style={style}>\n        <LinkStyled className=\"link-button\">\n            <a href={link} onMouseEnter={handleEnter} onMouseLeave={handleLeave}>{text}</a>\n        </LinkStyled>\n    </animated.div>\n    );\n}\n \nexport default LinkButton;"]},"metadata":{},"sourceType":"module"}